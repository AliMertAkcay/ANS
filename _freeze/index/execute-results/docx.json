{
  "hash": "b82f0a3e2d5dfb74e79c2216c0b00d0c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Praktische umsetzung von Aktiven Filterschaltungen\nauthor:\n  - name: Ali_Mert_Akcay\n    orcid: 0009-0007-2343-9680\n    corresponding: true\n    email: aakcay@stud.hs-bremen.de\n    roles:\n      - Reschersche\n      - Project administration\n      - Software\n      - Visualization\n    affiliations:\n      - Curvenote\n  - name: Julian Stolle\n    orcid: \n    corresponding: false\n    roles: []\n    affiliations:\n      - Curvenote\n  - name: Ehrlich\n    orcid:\n    corresponding: false\n    roles: []\n    affiliations:\n      - Curvenote\n\nkeywords:\n  - Operationsverstärker\n  - Aktivefilter\nabstract: |\n  Diese Dokumentation beschäftigt sich mit dem Entwurf eines Aktiven Filters, dessen realisierung aufgrund lage von Operationsverstärkern (Opamps) beschpürochen und gezeigt wird.\nplain-language-summary: |\n  Operationsverstäker sind sogenatne mehrstuffige differenzverstäker die persie die Aufgabe haben die Differenz von zwei signalen zu verstärken hierbei ist es so das die Gleichtakt unterdrückung im idealfall unendlich groß ist so wie die Versträkung so das mann mit dem Operationsverstärker Grundregeln bzw Anahmen rechnen können.\nkey-points:\n  - Hier steht ein Text zum Testen\ndate: last-modified\nbibliography: references.bib\ncitation:\n  container-title: Earth and Space Science\nnumber-sections: true\njupyter: python3\n---\n\n## Biquad Filterschaltung\n\n![Biquadschaltung](images/Biquadschaltung.png){#fig-map}\n\nDie in **Abbildung 1**  gezeigt schaltung wird in diesem Abschnit der Dokumentation behandelt. Es handelt sich hierbei um ein Universellen Biquad Filter welcher 4 Filter Typen in einem Realisiert. Eine wichtiger Parameter von Filtern ist die Güte dies lässt sich mit dem Widerstand R5 einstellen. Bei steigender güte sinkt je nach Filter Type entweder die Bandbreite z.B. beim Notchfilter (bandsperre) oder beim Bandpass und beim Tiefpassfilter bzw Hochapssfilter die Übergangsfrequenz sprich die breite.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code .hidden}\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom ltspice import Ltspice\nimport pandas as pd\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code .hidden}\n#Messwerte Tiefpassfilter mit Q1\ndfLPFQ1 = pd.read_csv(\"./Data/baData_LPF_Q1.csv\",sep=',')\nfTPQ1 = np.array(dfLPFQ1['Frequency'])\ngainTPQ1=np.array(dfLPFQ1['Amplitude'])\nphaseTPQ1 = np.array(dfLPFQ1['Phase'])\n\n#Messwerte Tiefpassfilter mit Q10\ndfLPFQ10 = pd.read_csv(\"./Data/baData_LP_Q10.csv\",sep=',')\nfTPQ10 = np.array(dfLPFQ10['Frequency'])\ngainTPQ10=np.array(dfLPFQ10['Amplitude'])\nphaseTPQ10 = np.array(dfLPFQ10['Phase'])\n\n#Messwerte Hochpassfilter mit Q1\ndfHPFQ1 = pd.read_csv(\"./Data/baData_HPF_Q1.csv\",sep=',')\nfHPFQ1 = np.array(dfHPFQ1['Frequency'])\ngainHPFQ1=np.array(dfHPFQ1['Amplitude'])\nphaseHPFQ1 = np.array(dfHPFQ1['Phase'])\n\n#Messwerte Hochpassfilter mit Q10\ndfHPFQ10 = pd.read_csv(\"./Data/baData_HP_Q10.csv\",sep=',')\nfHPFQ10 = np.array(dfHPFQ10['Frequency'])\ngainHPFQ10=np.array(dfHPFQ10['Amplitude'])\nphaseHPFQ10 = np.array(dfHPFQ10['Phase'])\n\n#Messwerte Bandpassfilter mit Q1\ndfBPFQ1 = pd.read_csv(\"./Data/baData_BPF_Q1.csv\",sep=',')\nfBPFQ1 = np.array(dfHPFQ1['Frequency'])\ngainBPFQ1=np.array(dfHPFQ1['Amplitude'])\nphaseBPFQ1 = np.array(dfHPFQ1['Phase'])\n\n#Messwerte Bandpassfilter mit Q10\ndfBPFQ10 = pd.read_csv(\"./Data/baData_BPF_Q10.csv\",sep=',')\nfBPFQ10 = np.array(dfBPFQ10['Frequency'])\ngainBPFQ10=np.array(dfBPFQ10['Amplitude'])\nphaseBPFQ10 = np.array(dfBPFQ10['Phase'])\n\n#Messwerte Bandsperre mit Q1\ndfBSFQ1 = pd.read_csv(\"./Data/baData_BSF_Q1.csv\",sep=',')\nfBSFQ1 = np.array(dfHPFQ1['Frequency'])\ngainBSFQ1=np.array(dfHPFQ1['Amplitude'])\nphaseBSFQ1 = np.array(dfHPFQ1['Phase'])\n\n#Messwerte Bandsperre mit Q10\ndfBSFQ10 = pd.read_csv(\"./Data/baData_BSF_Q10.csv\",sep=',')\nfBSFQ10 = np.array(dfBSFQ10['Frequency'])\ngainBSFQ10=np.array(dfBSFQ10['Amplitude'])\nphaseBSFQ10 = np.array(dfBSFQ10['Phase'])\n\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code .hidden}\n# -----------------------------------Einladen der Simulations Werte -----------------------------------------\n# Werte für die Tiefpassfilter mit güte 1\nfilepath1 = './spice_kicad/FSQ1.raw'\nl1 = Ltspice(filepath1)\nl1.parse() # Data loading sequence. It may take few minutes for huge file.\n\nf1 = l1.get_frequency()\nVbpf1 = l1.get_data('v(bpf)')\nVbsf1 = l1.get_data('v(bsf)')\nVhpf1 = l1.get_data('v(hpf)')\nVlpf1 = l1.get_data('v(lpf)')\n\n# Werte für die Tiefpassfilter mit güte 10\n\nfilepath10 = './spice_kicad/FSQ10.raw'\nl2 = Ltspice(filepath10)\nl2.parse()\n\nf2 = l2.get_frequency()\nVbpf10 = l2.get_data('v(bpf)')\nVbsf10 = l2.get_data('v(bsf)')\nVhpf10 = l2.get_data('v(hpf)')\nVlpf10 = l2.get_data('v(lpf)')\n```\n:::\n\n\n:::{#459ac9d8 .cell .markdown}\n## Vergleich der Messwerte mit den Simulationswerten\n\n### Tiefpassfilter\n:::\n\n::: {.cell execution_count=4}\n``` {.python .cell-code .hidden}\nplt.figure(\"Amplitudengang des Tiefpass filters\")\nplt.title(\"Amplitudengang des Tiefpassfilters\")\nplt.plot(f1,20*np.log10(abs(Vlpf1)),label=\"Q1 TP Simulation\")\nplt.plot(f2,20*np.log10(abs(Vlpf10)),label=\"Q10 TP Simulation\")\nplt.plot(fTPQ1,gainTPQ1,label='Tiefpassfilter gemessen Q1')\nplt.plot(fTPQ10,gainTPQ10,label='Tiefpassfilter gemessen Q10')\nplt.xscale('log')\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-docx/cell-5-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code .hidden}\nplt.figure(\"Phasengang des Tiefpass filters\")\nplt.title(\"Phasengang des Tiefpass filters\")\nplt.plot(f1,np.degrees(np.angle(Vlpf1)),label=\"Q1 TP Simulation\")\nplt.plot(f2,np.degrees(np.angle(Vlpf10)),label=\"Q10 TP Simulation\")\nplt.plot(fTPQ1,phaseTPQ1,label='Tiefpassfilter gemessen Q1')\nplt.plot(fTPQ10,phaseTPQ10,label='Tiefpassfilter gemessen Q10')\nplt.xscale('log')\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-docx/cell-6-output-1.png){}\n:::\n:::\n\n\n:::{#896783c8 .cell .markdown}\n### Hochpassfilter\n:::\n\n::: {.cell execution_count=6}\n``` {.python .cell-code .hidden}\nplt.figure(\"Amplitudengang des Hochpassfilters\")\nplt.title(\"Amplitudengang des Hochpassfilters\")\nplt.plot(f1,20*np.log10(abs(Vhpf1)),label=\"Q1 HP Simulation\")\nplt.plot(f2,20*np.log10(abs(Vhpf10)),label=\"Q10 HP Simulation\")\nplt.plot(fHPFQ1,gainHPFQ1,label='Hochpassfilter gemessen Q1')\nplt.plot(fHPFQ10,gainHPFQ10,label='Hochpassfilter gemessen Q10')\nplt.xscale('log')\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-docx/cell-7-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code .hidden}\nplt.figure(\"Phasengang des Hochpassfilters\")\nplt.title(\"Phasengang des Hochpassfilters\")\nplt.plot(f1,np.degrees(np.angle(Vhpf1)),label=\"Q1 HP Simulation\")\nplt.plot(f2,np.degrees(np.angle(Vhpf10)),label=\"Q10 HP Simulation\")\nplt.plot(fHPFQ1,phaseHPFQ1,label='Hochpassfilter gemessen Q1')\nplt.plot(fHPFQ10,phaseHPFQ10,label='Hochpassfilter gemessen Q10')\nplt.xscale('log')\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-docx/cell-8-output-1.png){}\n:::\n:::\n\n\n:::{#516a2d4a .cell .markdown}\n### Bandpassfilter\n:::\n\n::: {.cell execution_count=8}\n``` {.python .cell-code .hidden}\nplt.figure(\"Amplitudengang des Bandpassfilters\")\nplt.title(\"Amplitudengang des Bandpassfilters\")\nplt.plot(f1,20*np.log10(abs(Vbpf1)),label=\"Q1 BPF Simulation\")\nplt.plot(f2,20*np.log10(abs(Vbpf10)),label=\"Q10 BPF Simulation\")\nplt.plot(fBPFQ1,gainBPFQ1,label='Bandpassfilter gemessen Q1')\nplt.plot(fBPFQ10,gainBPFQ10,label='Bandpassfilter gemessen Q10')\nplt.xscale('log')\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-docx/cell-9-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code .hidden}\nplt.figure(\"Phasengang des Bandpassfilters\")\nplt.title(\"Phasengang des Bandpassfilters\")\nplt.plot(f1,np.degrees(np.angle(Vbpf1)),label=\"Q1 BPF Simulation\")\nplt.plot(f2,np.degrees(np.angle(Vbpf10)),label=\"Q10 BPF Simulation\")\nplt.plot(fBPFQ1,phaseBPFQ1,label='Bandpassfilter gemessen Q1')\nplt.plot(fBPFQ10,phaseBPFQ10,label='Bandpassfilter gemessen Q10')\nplt.xscale('log')\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-docx/cell-10-output-1.png){}\n:::\n:::\n\n\n:::{#d23b1817 .cell .markdown}\n### Bandstopfilter\n:::\n\n::: {.cell execution_count=10}\n``` {.python .cell-code .hidden}\nplt.figure(\"Amplitudengang des Bandstopfilters\")\nplt.title(\"Amplitudengang des Bandstopfilters\")\nplt.plot(f1,20*np.log10(abs(Vbsf1)),label=\"Q1 BSF Simulation\")\nplt.plot(f2,20*np.log10(abs(Vbsf10)),label=\"Q10 BSF Simulation\")\nplt.plot(fBSFQ1,gainBSFQ1,label='Bandstopfilter gemessen Q1')\nplt.plot(fBSFQ10,gainBSFQ10,label='Bandstopfilter gemessen Q10')\nplt.xscale('log')\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-docx/cell-11-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code .hidden}\nplt.figure(\"Phasengang des Bandstopfilters\")\nplt.title(\"Phasengang des Bandstopfilters\")\nplt.plot(f1,np.degrees(np.angle(Vbsf1)),label=\"Q1 BSF Simulation\")\nplt.plot(f2,np.degrees(np.angle(Vbsf10)),label=\"Q10 BSF Simulation\")\nplt.plot(fBSFQ1,phaseBSFQ1,label='Bandstopfilter gemessen Q1')\nplt.plot(fBSFQ10,phaseBSFQ10,label='Bandstopfilter gemessen Q10')\nplt.xscale('log')\nplt.grid()\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-docx/cell-12-output-1.png){}\n:::\n:::\n\n\n:::{#66ad4ff7 .cell .markdown}\nDie Gemessenen werte müssen nocheinmal überptüft werden etwas stimmt entweder bei der Messung under beim einlessen der werte nicht sollte aber die Messung sein.\n\n::: {#refs}\n:::\n:::\n\n",
    "supporting": [
      "index_files/figure-docx"
    ],
    "filters": []
  }
}